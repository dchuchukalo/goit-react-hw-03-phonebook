{"version":3,"sources":["components/ContactList/ElementContactList/ElementContactList.module.css","components/Filter/Filter.module.css","App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ElementContactList/ElementContactList.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","replace","handleSubmit","preventDefault","props","onSubmit","reset","this","className","styles","form","formTitle","formInput","type","onChange","id","nameInputId","numberInputId","addToContact","Component","ElementContactList","contacts","deleteContact","map","item","key","info","delete","onClick","ContactList","Filter","App","filter","notifyWarn","text","toast","warn","notifySuccess","success","contactId","prevState","contact","formSubmitHandler","data","newContact","uuidv4","findAlreadyInContacts","toLowerCase","find","changeFilter","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","normalizedFilter","filteredContacts","includes","title","length","position","autoClose","newestOnTop","limit","transition","Zoom","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3719a159.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ElementContactList_item__SqKH9\",\"info\":\"ElementContactList_info__1cJAW\",\"delete\":\"ElementContactList_delete__1uoez\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formTitle\":\"Filter_formTitle__2ICn9\",\"formInput\":\"Filter_formInput__ufj-H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1TIcV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__-l5-L\",\"formTitle\":\"ContactForm_formTitle__2R9Fr\",\"formInput\":\"ContactForm_formInput__vNyqw\",\"addToContact\":\"ContactForm_addToContact__1tx21\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    name === 'number'\n      ? this.setState({ [name]: value.replace(/[^\\d-]/g, '') })\n      : this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.formTitle}>\n          Name\n          <input\n            className={styles.formInput}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          />\n        </label>\n\n        <label className={styles.formTitle}>\n          Number\n          <input\n            className={styles.formInput}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            id={this.numberInputId}\n          />\n        </label>\n\n        <button className={styles.addToContact} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ElementContactList.module.css';\n\nconst ElementContactList = ({ contacts, deleteContact }) =>\n  contacts.map(({ id, name, number }) => (\n    <li className={styles.item} key={id}>\n      <span className={styles.info}>\n        {name}: {number}\n      </span>\n      <button\n        className={styles.delete}\n        onClick={() => {\n          deleteContact(id);\n        }}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  ));\n\nElementContactList.propTypes = {\n  contacts: PropTypes.PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ElementContactList;\n","import React from 'react';\nimport ElementContactList from './ElementContactList';\n\nconst ContactList = ({ contacts, deleteContact }) => (\n  <ul>\n    <ElementContactList contacts={contacts} deleteContact={deleteContact} />\n  </ul>\n);\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.formTitle}>\n      Find contacts by name\n      <input\n        className={styles.formInput}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ToastContainer, toast, Zoom } from 'react-toastify';\n\nimport styles from './App.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'modern-normalize/modern-normalize.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n\n    if (contacts) {\n      this.setState({ contacts: contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  notifyWarn = text => toast.warn(text);\n\n  notifySuccess = text => toast.success(text);\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  formSubmitHandler = data => {\n    const newContact = { id: uuidv4(), ...data };\n    this.findAlreadyInContacts(newContact);\n  };\n\n  findAlreadyInContacts = newContact => {\n    const name = newContact.name.toLowerCase();\n\n    if (name === '') {\n      this.notifyWarn(`Please enter name and number`);\n      return;\n    }\n\n    if (\n      this.state.contacts.find(contact => contact.name.toLowerCase() === name)\n    ) {\n      this.notifyWarn(`${newContact.name} is already in contacts.`);\n      return;\n    }\n\n    this.setState(prevState => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n    this.notifySuccess('Added successfully');\n  };\n\n  changeFilter = e => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n    return (\n      <>\n        <h1 className={styles.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2 className={styles.title}>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter value={filter} onChange={this.changeFilter} />\n        )}\n        {contacts.length > 0 ? (\n          <ContactList\n            contacts={filteredContacts}\n            deleteContact={this.deleteContact}\n          />\n        ) : (\n          <p>The contact list is empty. Please add a new contact.</p>\n        )}\n        <ToastContainer\n          position=\"top-center\"\n          autoClose={2000}\n          newestOnTop\n          limit={3}\n          transition={Zoom}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}